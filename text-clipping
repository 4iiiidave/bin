#!/usr/bin/env swift

// https://github.com/davidfmiller/bin

import Foundation
import Cocoa
import Darwin

let stderr = FileHandle.standardError
let stdout = FileHandle.standardOutput

let ARGUMENTS = Array(CommandLine.arguments[1 ..< CommandLine.arguments.count])

if ARGUMENTS.count < 1 {
  stderr.write("ðŸš«  Usage: > text-clipping {path}\n".data(using: String.Encoding.utf8)!)
  exit(0)
}

var i = 0
for i in ARGUMENTS {
  let name = ARGUMENTS[0]

  let config : NSDictionary? = NSDictionary(contentsOfFile:name)
  let dict : NSDictionary = config!["UTI-Data"] as! NSDictionary
  print("\(dict["public.utf8-plain-text"]!)")
}

/*
let PATH = NSString(string: "~/.pushover.plist").expandingTildeInPath

if (config!.object(forKey:"user") == nil) {
  stderr.write("ðŸš«  `user` identifier does not exist in \(PATH)\n".data(using: String.Encoding.utf8)!)
  exit(0)
}

if (config!.object(forKey:"applications") == nil) {
  stderr.write("ðŸš«  `applications` dictionary does not exist in \(PATH)\n".data(using: String.Encoding.utf8)!)
  exit(0)
}

let apps : NSDictionary = config!.object(forKey:"applications") as! NSDictionary

if (apps.object(forKey:APP) == nil) {
  stderr.write("ðŸš«  application `\(APP)` does not exist in \(PATH)\n".data(using: String.Encoding.utf8)!)
  exit(0)
}

let USER : String = config!.object(forKey:"user") as! String
let APPKEY : NSString = apps.object(forKey: APP) as! NSString
let HOST = "https://api.pushover.net"

let request = NSMutableURLRequest(url: URL(string: "\(HOST)/1/messages.json")!)
request.httpMethod = "POST"
request.httpBody = "token=\(APPKEY)&user=\(USER)&message=\(MESSAGE)".data(using: String.Encoding.utf8);

let semaphore = DispatchSemaphore(value: 0)

let task = URLSession.shared.dataTask(with: request as URLRequest) {(data, response, error) in
  if error != nil {
    stderr.write("ðŸš«  \(error!)\n".data(using: String.Encoding.utf8)!)
    exit(0)
  }

  semaphore.signal()
}
task.resume()
_ = semaphore.wait(timeout: DispatchTime.distantFuture)
*/