#!/usr/bin/env swift

// http://github.com/davidfmiller/bin/

import Foundation
import Cocoa
import Darwin

let stderr = FileHandle.standardError

let arguments = Array(CommandLine.arguments[1 ..< CommandLine.arguments.count])

let mimes : [ String : String] = [
  "css"  : "text/css",
  "gif"  : "image/gif",
  "htm"  : "text/html",
  "html" : "text/html",
  "jpg"  : "image/jpeg",
  "jpeg" : "image/jpeg",
  "js"   : "application/javascript",
  "json" : "application/javascript",
  "pdf"  : "application/pdf",
  "png"  : "image/png",
  "svg"  : "image/svg+xml",
  "txt"  : "text/plain"
]

if arguments.count == 1 {

    let str = arguments[0] 
    if str[str.startIndex...str.index(str.startIndex, offsetBy:1)] == "--" {

        let mime = (str[str.index(str.startIndex, offsetBy: 2)...str.index(str.endIndex, offsetBy: -1)])

        if (mime == "help") {
          print("🌏  https://github.com/davidfmiller/bin/ \nRetrieve base64-encoding of file for use in a data uri ")
          exit(0)
        }

        let data = FileHandle.standardInput.availableData
        print("data:" + mime + ";charset=UTF-8;base64," + data.base64EncodedString())
        exit(0)
    }
}

for path in arguments
{
    let url = NSURL(fileURLWithPath: path)

    var err: NSError?
    if !url.checkResourceIsReachableAndReturnError(&err)
    {
        stderr.write("🚫  file `\(path)` doesn't exist\n".data(using: String.Encoding.utf8)!)
        continue;
    }

    var mime = mimes[url.pathExtension!] != nil ? mimes[url.pathExtension!]! : mimes["txt"]!

    let data = NSData(contentsOfFile: path)

    print("data:" + mime + ";charset=UTF-8;base64," + data!.base64EncodedString())
}