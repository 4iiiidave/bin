#!/usr/bin/env python
# -*- coding: utf-8 -

"""
A simple hack to open a git repository's remote host in your default web browser

https://github.com/davidfmiller/bin

"""

import sys
import subprocess
import re
import getopt
import os
import urlparse


out,err = subprocess.Popen(["git", "remote", "show", "origin"], stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
lines = out.splitlines()

# no git repo
if len(lines) == 0:
  sys.stderr.write("ðŸš«  No git repo found\n")
  sys.exit(2)

try:
  opts, args = getopt.getopt(sys.argv[1:], '')
except getopt.GetoptError:
  sys.stderr.write("ðŸš«  Incorrect usage\n")
  sys.exit(2)

# retrieve the line that has the fetch url, and strip all extraneous info
fetchLine = lines[1].split(':', 1)[1].strip()

# base url for the repository
url = ''

# type of hosting service for this repo (one of: github, bitbucket)
host = None
github, bitbucket = range(0,2)

branch = 'master'

out,err = subprocess.Popen(["git", "branch"], stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
lines = out.splitlines()


# if there's â‰¥ 1 line from branch command, find the current branch name
if len(lines) != 1:
  for line in lines:
    line = line.strip()
    # if this is the current branch
    if line[0] == "*":
      branch = line[1:].strip()

# github https
if re.search(r'^https://github.com', fetchLine):
  url = fetchLine #[:-4]
  host = github

# github git
elif re.search(r'^git@github.com', fetchLine):
  url = 'https://github.com/' + fetchLine.split(':', 1)[1][:-4]
  host = github

# bitbucket git
elif re.search(r'^git@bitbucket.org', fetchLine):
  url = fetchLine[:-4].replace(':', '/').replace('git@', 'https://')
  host = bitbucket

# bitbucket https
elif re.search(r'^[^@]*@bitbucket.org', fetchLine):
  o = urlparse.urlparse(fetchLine)
  url = 'https://bitbucket.org' + o.path[:-4]
  #url = fetchLine[:-4].replace(':', '/').replace('git@', 'https://')
  host = bitbucket


# unknown 
else:
  sys.stderr.write("ðŸš«  Unknown remote origin " + fetchLine)
  sys.exit(2)

# find the repository root, walking up the directory tree if necessary
root = os.getcwd()
while root != '/':
  repo = os.path.join(root, '.git')
  if os.path.exists(repo):
    break
  else:
    root = os.path.abspath(os.path.join(root, os.pardir))

# if no files have been specified as args, handle the repository root
if len(args) == 0:
  args = [root]

# loop through all files passed to the script
for file in args:

  # determine the path of the current file, relative to the repository root
  current = os.path.abspath(os.path.join(os.getcwd(), file))
  path = current.replace(root, '')

  # if we're not dealing with the repo root...
  if file != root:

    # figure out file's url based on host type
    if host == github:
      current = url + "/" + (os.path.isdir(file) and "tree" or "blob") + "/" + branch + path
    else:
      current = url + "/src/" + branch + path

  # display the repository home page
  else:
    current = url

  # if we're on os x, open the url in the default web browser
  try :
    subprocess.Popen(["open", current])
  # otherwise print the url to stdout
  except:
    sys.stdout.write("ðŸŒŽ  " + current + "\n")
